"use strict";exports.id=3104,exports.ids=[3104],exports.modules={57505:(e,t,s)=>{s.d(t,{I:()=>o});var a=s(30784),r=s(9885),i=s(80467);const o=r.forwardRef((({className:e,type:t,...s},r)=>a.jsx("input",{type:t,className:(0,i.cn)("flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",e),ref:r,...s})));o.displayName="Input"},37565:(e,t,s)=>{s.d(t,{_:()=>c});var a=s(30784),r=s(9885),i=s(43618),o=s(91971),n=s(80467);const u=(0,o.j)("text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"),c=r.forwardRef((({className:e,...t},s)=>a.jsx(i.f,{ref:s,className:(0,n.cn)(u(),e),...t})));c.displayName=i.f.displayName},85525:(e,t,s)=>{s.d(t,{E:()=>r});const a=process.env.NEXT_PUBLIC_API_URL||"http://localhost:8090";const r=new class{async request(e,t={}){const s=`${a}${e}`,r={headers:{"Content-Type":"application/json",...t.headers},...t};try{const e=await fetch(s,r);if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return await e.json()}catch(i){throw i}}async getHealth(){return this.request("/health")}async listVMs(){return this.request("/api/v1/vms")}async getVM(e){return this.request(`/api/v1/vms/${e}`)}async createVM(e){return this.request("/api/v1/vms",{method:"POST",body:JSON.stringify(e)})}async deleteVM(e){return this.request(`/api/v1/vms/${e}`,{method:"DELETE"})}async startVM(e){return this.request(`/api/v1/vms/${e}/start`,{method:"POST"})}async stopVM(e){return this.request(`/api/v1/vms/${e}/stop`,{method:"POST"})}async getVMMetrics(e){return this.request(`/api/v1/vms/${e}/metrics`)}async listJobs(){return(await this.request("/api/jobs")).data}async getJob(e){return(await this.request(`/api/jobs/${e}`)).data}async createJob(e){return(await this.request("/api/jobs",{method:"POST",body:JSON.stringify(e)})).data}async updateJob(e,t){return(await this.request(`/api/jobs/${e}`,{method:"PUT",body:JSON.stringify(t)})).data}async deleteJob(e){return(await this.request(`/api/jobs/${e}`,{method:"DELETE"})).success}async executeJob(e){return(await this.request(`/api/jobs/${e}/execute`,{method:"POST"})).data}async getJobExecutions(e){return(await this.request(`/api/jobs/${e}/executions`)).data}async listWorkflows(){return(await this.request("/api/workflows")).data}async getWorkflow(e){return(await this.request(`/api/workflows/${e}`)).data}async createWorkflow(e){return(await this.request("/api/workflows",{method:"POST",body:JSON.stringify(e)})).data}async updateWorkflow(e,t){return(await this.request(`/api/workflows/${e}`,{method:"PUT",body:JSON.stringify(t)})).data}async deleteWorkflow(e){return(await this.request(`/api/workflows/${e}`,{method:"DELETE"})).success}async executeWorkflow(e){return(await this.request(`/api/workflows/${e}/execute`,{method:"POST"})).data}async getWorkflowExecution(e){return(await this.request(`/api/workflows/executions/${e}`)).data}async register(e){return this.request("/api/auth/register",{method:"POST",body:JSON.stringify(e)})}async login(e,t){return this.request("/api/auth/login",{method:"POST",body:JSON.stringify({email:e,password:t})})}async checkEmailAvailability(e){return this.request(`/api/auth/check-email?email=${encodeURIComponent(e)}`)}async resendVerificationEmail(e){return this.request("/api/auth/resend-verification",{method:"POST",body:JSON.stringify({email:e})})}async verifyEmail(e){return this.request("/api/auth/verify-email",{method:"POST",body:JSON.stringify({token:e})})}createWebSocket(e,t){try{const s=a.replace("http","ws")+"/ws",r=new WebSocket(s);return r.onmessage=t=>{try{const s=JSON.parse(t.data);e(s)}catch(s){}},r.onerror=e=>{t&&t(e)},r}catch(s){return null}}}}};
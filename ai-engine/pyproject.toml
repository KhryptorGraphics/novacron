[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "novacron-ai-engine"
version = "0.1.0"
description = "AI-powered operations engine for NovaCron VM management"
authors = [
    {name = "NovaCron Team", email = "team@novacron.dev"},
]
license = {file = "LICENSE"}
readme = "README.md"
requires-python = ">=3.12,<4.0"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.12",
]

[project.urls]
Homepage = "https://github.com/khryptorgraphics/novacron"
Repository = "https://github.com/khryptorgraphics/novacron"
Issues = "https://github.com/khryptorgraphics/novacron/issues"

[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "sklearn.*",
    "tensorflow.*",
    "xgboost.*",
    "lightgbm.*",
    "pyod.*",
    "tsfresh.*",
    "tslearn.*",
    "evidently.*",
    "alibi_detect.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=ai_engine --cov-report=term-missing --cov-report=xml --cov-report=html"
testpaths = [
    "tests",
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["ai_engine"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
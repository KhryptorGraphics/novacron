name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root123
          MYSQL_DATABASE: novacron_test
          MYSQL_USER: novacron
          MYSQL_PASSWORD: novacron123
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install backend dependencies
      run: npm ci
    
    - name: Install frontend dependencies
      run: cd frontend && npm ci
    
    - name: Initialize test database
      run: |
        mysql -h 127.0.0.1 -u root -proot123 novacron_test < src/database/migrations/001_jobs_table.sql
    
    - name: Run backend tests
      run: npm test
      env:
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_USER: novacron
        DB_PASSWORD: novacron123
        DB_NAME: novacron_test
        REDIS_URL: redis://127.0.0.1:6379
    
    - name: Run frontend tests
      run: cd frontend && npm test
      env:
        NEXT_PUBLIC_API_URL: http://localhost:8090

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Build backend
      run: npm run build
    
    - name: Build frontend
      run: cd frontend && npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          dist/
          frontend/.next/

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment"
        # Add deployment commands here

  deploy-production:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to production
      run: |
        echo "Deploying to production environment"
        # Add deployment commands here
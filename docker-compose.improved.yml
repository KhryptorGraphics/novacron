version: '3.8'

services:
  # PostgreSQL database with improved configuration
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-novacron}
      POSTGRES_INITDB_ARGS: "--auth-host=md5"
    ports:
      - "${POSTGRES_PORT:-11432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./configs/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-novacron}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - novacron-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Improved API service with enhanced configuration
  api:
    build:
      context: .
      dockerfile: docker/api-simple.Dockerfile
    image: novacron-api-simple:latest
    restart: unless-stopped
    environment:
      # Server configuration
      API_PORT: ${API_PORT:-8090}
      WS_PORT: ${WS_PORT:-8091}
      READ_TIMEOUT: ${READ_TIMEOUT:-15s}
      WRITE_TIMEOUT: ${WRITE_TIMEOUT:-15s}
      IDLE_TIMEOUT: ${IDLE_TIMEOUT:-60s}
      SHUTDOWN_TIMEOUT: ${SHUTDOWN_TIMEOUT:-30s}
      
      # Database configuration
      DB_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-novacron}?sslmode=disable
      DB_MAX_CONNECTIONS: ${DB_MAX_CONNECTIONS:-25}
      DB_CONN_MAX_LIFETIME: ${DB_CONN_MAX_LIFETIME:-5m}
      
      # Authentication configuration
      AUTH_SECRET: ${AUTH_SECRET:-changeme_in_production}
      AUTH_SESSION_EXPIRY: ${AUTH_SESSION_EXPIRY:-24h}
      AUTH_PASSWORD_MIN_LENGTH: ${AUTH_PASSWORD_MIN_LENGTH:-8}
      
      # Logging configuration
      LOG_LEVEL: ${LOG_LEVEL:-info}
      LOG_FORMAT: ${LOG_FORMAT:-json}
      LOG_STRUCTURED: ${LOG_STRUCTURED:-true}
      
      # CORS configuration
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost:8092,http://localhost:3001}
      CORS_ALLOWED_METHODS: ${CORS_ALLOWED_METHODS:-GET,POST,PUT,DELETE,OPTIONS}
      CORS_ALLOWED_HEADERS: ${CORS_ALLOWED_HEADERS:-Content-Type,Authorization,X-Request-ID}
      
      # VM configuration
      STORAGE_PATH: ${STORAGE_PATH:-/var/lib/novacron/vms}
      VM_DEFAULT_CPU_SHARES: ${VM_DEFAULT_CPU_SHARES:-1024}
      VM_DEFAULT_MEMORY_MB: ${VM_DEFAULT_MEMORY_MB:-512}
      
    ports:
      - "${API_PORT:-8090}:8090"
      - "${WS_PORT:-8091}:8091"
    volumes:
      - api_logs:/var/log/novacron
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - novacron-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 256M

  # Frontend service - temporarily using nginx for testing
  frontend:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-8092}:80"
    volumes:
      - ./frontend/public:/usr/share/nginx/html:ro
    depends_on:
      - api
    networks:
      - novacron-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Prometheus for metrics with improved configuration
  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--log.level=info'
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./configs/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    networks:
      - novacron-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Grafana for visualization with security improvements
  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-admin123}
      GF_USERS_ALLOW_SIGN_UP: 'false'
      GF_INSTALL_PLUGINS: grafana-piechart-panel
      GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION: 'false'
      GF_LOG_LEVEL: info
    ports:
      - "${GRAFANA_PORT:-3001}:3000"
    volumes:
      - ./configs/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - novacron-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    user: "472:472"  # Grafana user
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis123} --appendonly yes
    ports:
      - "${REDIS_PORT:-16380}:6379"
    volumes:
      - redis_data:/data
    networks:
      - novacron-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redis123}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

networks:
  novacron-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  redis_data:
    driver: local
  api_logs:
    driver: local
---
# PostgreSQL Exporter Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-exporter
  namespace: novacron
  labels:
    app: postgres-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-exporter
  template:
    metadata:
      labels:
        app: postgres-exporter
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9187"
    spec:
      serviceAccountName: novacron-sa
      containers:
        - name: postgres-exporter
          image: prometheuscommunity/postgres-exporter:v0.15.0
          ports:
            - containerPort: 9187
              name: metrics
          env:
            - name: DATA_SOURCE_URI
              value: "postgres:5432/postgres?sslmode=disable"
            - name: DATA_SOURCE_USER
              value: "postgres"
            - name: DATA_SOURCE_PASS
              valueFrom:
                secretKeyRef:
                  name: novacron-secrets
                  key: postgres-password
            - name: PG_EXPORTER_AUTO_DISCOVER_DATABASES
              value: "true"
            - name: PG_EXPORTER_INCLUDE_DATABASES
              value: "novacron"
          resources:
            requests:
              memory: "32Mi"
              cpu: "10m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          livenessProbe:
            httpGet:
              path: /metrics
              port: 9187
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /metrics
              port: 9187
            initialDelaySeconds: 10
            periodSeconds: 10

---
# PostgreSQL Exporter Service
apiVersion: v1
kind: Service
metadata:
  name: postgres-exporter
  namespace: novacron
  labels:
    app: postgres-exporter
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9187"
spec:
  type: ClusterIP
  selector:
    app: postgres-exporter
  ports:
    - port: 9187
      targetPort: 9187
      name: metrics

---
# Redis Exporter Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-exporter
  namespace: novacron
  labels:
    app: redis-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-exporter
  template:
    metadata:
      labels:
        app: redis-exporter
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9121"
    spec:
      serviceAccountName: novacron-sa
      containers:
        - name: redis-exporter
          image: oliver006/redis_exporter:v1.55.0
          ports:
            - containerPort: 9121
              name: metrics
          env:
            - name: REDIS_ADDR
              value: "redis://redis:6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: novacron-secrets
                  key: redis-password
          resources:
            requests:
              memory: "32Mi"
              cpu: "10m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          livenessProbe:
            httpGet:
              path: /metrics
              port: 9121
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /metrics
              port: 9121
            initialDelaySeconds: 10
            periodSeconds: 10

---
# Redis Exporter Service
apiVersion: v1
kind: Service
metadata:
  name: redis-exporter
  namespace: novacron
  labels:
    app: redis-exporter
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9121"
spec:
  type: ClusterIP
  selector:
    app: redis-exporter
  ports:
    - port: 9121
      targetPort: 9121
      name: metrics

---
# Update Prometheus configuration to scrape exporters
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config-addon
  namespace: novacron
data:
  prometheus-addon.yml: |
    # Additional scrape configs for database exporters
    scrape_configs:
      - job_name: 'postgres-exporter'
        kubernetes_sd_configs:
          - role: service
            namespaces:
              names:
                - novacron
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_label_app]
            action: keep
            regex: postgres-exporter
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name]
            action: replace
            target_label: job
            separator: /
            replacement: '$1/$2'

      - job_name: 'redis-exporter'
        kubernetes_sd_configs:
          - role: service
            namespaces:
              names:
                - novacron
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_label_app]
            action: keep
            regex: redis-exporter
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name]
            action: replace
            target_label: job
            separator: /
            replacement: '$1/$2'

---
# ServiceMonitor for Prometheus Operator (if using)
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: postgres-exporter
  namespace: novacron
spec:
  selector:
    matchLabels:
      app: postgres-exporter
  endpoints:
    - port: metrics
      interval: 30s
      path: /metrics

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: redis-exporter
  namespace: novacron
spec:
  selector:
    matchLabels:
      app: redis-exporter
  endpoints:
    - port: metrics
      interval: 30s
      path: /metrics
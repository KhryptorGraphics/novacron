apiVersion: v1
kind: Service
metadata:
  name: novacron-api
  namespace: novacron
  labels:
    app.kubernetes.io/name: novacron
    app.kubernetes.io/component: api
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
spec:
  type: ClusterIP
  ports:
    - port: 8091
      targetPort: http-api
      protocol: TCP
      name: http-api
    - port: 8093
      targetPort: websocket
      protocol: TCP
      name: websocket
    - port: 9090
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: novacron
    app.kubernetes.io/component: api

---
apiVersion: v1
kind: Service
metadata:
  name: novacron-frontend
  namespace: novacron
  labels:
    app.kubernetes.io/name: novacron
    app.kubernetes.io/component: frontend
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
    - port: 443
      targetPort: https
      protocol: TCP
      name: https
  selector:
    app.kubernetes.io/name: novacron
    app.kubernetes.io/component: frontend

---
apiVersion: v1
kind: Service
metadata:
  name: novacron-postgres
  namespace: novacron
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: postgres
      protocol: TCP
      name: postgres
  selector:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database

---
# Headless service for StatefulSet
apiVersion: v1
kind: Service
metadata:
  name: postgres-headless
  namespace: novacron
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 5432
      targetPort: postgres
      protocol: TCP
      name: postgres
  selector:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: novacron
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: monitoring
spec:
  type: ClusterIP
  ports:
    - port: 9090
      targetPort: web
      protocol: TCP
      name: web
  selector:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: monitoring

---
# Load Balancer Service (for external access)
apiVersion: v1
kind: Service
metadata:
  name: novacron-loadbalancer
  namespace: novacron
  labels:
    app.kubernetes.io/name: novacron
    app.kubernetes.io/component: loadbalancer
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:region:account:certificate/cert-id"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
spec:
  type: LoadBalancer
  loadBalancerSourceRanges:
    - 10.0.0.0/8
    - 172.16.0.0/12
    - 192.168.0.0/16
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
    - port: 443
      targetPort: https
      protocol: TCP
      name: https
  selector:
    app.kubernetes.io/name: novacron
    app.kubernetes.io/component: frontend

---
# Service Monitor for Prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: novacron-api
  namespace: novacron
  labels:
    app.kubernetes.io/name: novacron
    app.kubernetes.io/component: api
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: novacron
      app.kubernetes.io/component: api
  endpoints:
    - port: metrics
      interval: 30s
      path: /metrics
      honorLabels: true

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: prometheus
  namespace: novacron
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: monitoring
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/component: monitoring
  endpoints:
    - port: web
      interval: 30s
      path: /metrics
# NovaCron API Production Dockerfile
# Multi-stage build for optimized production image

# Build stage
FROM golang:1.21-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git ca-certificates tzdata

# Create non-root user for build
RUN adduser -D -g '' appuser

# Set work directory
WORKDIR /build

# Copy go modules
COPY go.mod go.sum ./
RUN go mod download && go mod verify

# Copy source code
COPY backend/ ./backend/
COPY sdk/ ./sdk/

# Build the application with optimizations
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 \
    go build \
    -ldflags='-w -s -extldflags "-static"' \
    -a -installsuffix cgo \
    -o api-server \
    ./backend/cmd/api-server

# Production stage
FROM scratch

# Import CA certificates and timezone data
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/
COPY --from=builder /usr/share/zoneinfo /usr/share/zoneinfo

# Import non-root user
COPY --from=builder /etc/passwd /etc/passwd

# Copy binary
COPY --from=builder /build/api-server /api-server

# Create directories for application
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD ["/api-server", "healthcheck"]

# Expose ports
EXPOSE 8090 8091

# Run the binary
ENTRYPOINT ["/api-server"]
# NovaCron Secrets Management Configuration
# This file configures the secrets management system

secrets:
  # Provider selection: vault, aws, env
  provider: ${SECRETS_PROVIDER:vault}
  
  # Cache configuration
  cache:
    enabled: true
    ttl_seconds: ${SECRETS_CACHE_TTL:300}
    max_entries: 1000

  # Vault provider configuration
  vault:
    address: ${VAULT_ADDR}  # Required, no default
    token: ${VAULT_TOKEN}   # Can also use other auth methods
    namespace: ${VAULT_NAMESPACE:}
    path_prefix: ${VAULT_PATH_PREFIX:secret/data/novacron}
    
    # TLS configuration
    tls:
      enabled: ${VAULT_TLS_ENABLED:true}
      ca_cert: ${VAULT_CA_CERT:}
      client_cert: ${VAULT_CLIENT_CERT:}
      client_key: ${VAULT_CLIENT_KEY:}
      skip_verify: ${VAULT_TLS_SKIP_VERIFY:false}
    
    # Auth method configuration
    auth:
      method: ${VAULT_AUTH_METHOD:token}  # token, kubernetes, aws, approle
      
      # AppRole auth
      approle:
        role_id: ${VAULT_ROLE_ID:}
        secret_id: ${VAULT_SECRET_ID:}
      
      # Kubernetes auth
      kubernetes:
        role: ${VAULT_K8S_ROLE:}
        jwt_path: /var/run/secrets/kubernetes.io/serviceaccount/token

  # AWS Secrets Manager configuration  
  aws:
    region: ${AWS_REGION:us-east-1}
    prefix: ${AWS_SECRETS_PREFIX:novacron/}
    endpoint: ${AWS_SECRETS_ENDPOINT:}  # For local testing with LocalStack
    
    # Credentials (uses AWS SDK default chain if not specified)
    access_key_id: ${AWS_ACCESS_KEY_ID:}
    secret_access_key: ${AWS_SECRET_ACCESS_KEY:}
    session_token: ${AWS_SESSION_TOKEN:}

  # Environment variable provider (development only)
  env:
    prefix: ${ENV_SECRETS_PREFIX:NOVACRON_}
    # Warning will be logged if used in production

# Audit logging configuration
audit:
  enabled: true
  
  # Storage backend for audit logs
  storage:
    type: ${AUDIT_STORAGE_TYPE:database}  # database, file, syslog
    
    # Database storage
    database:
      table: audit_logs
      archive_table: audit_logs_archive
      archive_after_days: 90
      
    # File storage
    file:
      path: ${AUDIT_LOG_PATH:/var/log/novacron/audit.log}
      rotation: daily
      retention_days: 90
      
    # Syslog storage
    syslog:
      facility: ${AUDIT_SYSLOG_FACILITY:LOG_AUTH}
      tag: novacron-audit

  # Alerting configuration
  alerting:
    enabled: true
    
    # Alert on these events
    events:
      - SECRET_MODIFY
      - SECRET_DELETE
      - SECRET_ROTATE
      - AUTH_FAILURE
      - PERMISSION_DENY
    
    # Alert destinations
    destinations:
      - type: webhook
        url: ${ALERT_WEBHOOK_URL:}
        headers:
          Authorization: Bearer ${ALERT_WEBHOOK_TOKEN:}
      
      - type: email
        smtp_host: ${SMTP_HOST:}
        smtp_port: ${SMTP_PORT:587}
        from: ${ALERT_EMAIL_FROM:}
        to: ${ALERT_EMAIL_TO:}

  # Compliance reporting
  compliance:
    enabled: true
    standards:
      - SOC2
      - HIPAA
      - PCI-DSS
    
    # Compliance report destination
    report:
      type: ${COMPLIANCE_REPORT_TYPE:s3}  # s3, file, api
      
      s3:
        bucket: ${COMPLIANCE_BUCKET:}
        prefix: compliance/audit/
        region: ${AWS_REGION:us-east-1}
      
      file:
        path: /var/log/novacron/compliance/
      
      api:
        endpoint: ${COMPLIANCE_API_ENDPOINT:}
        api_key: ${COMPLIANCE_API_KEY:}

# Secret rotation configuration
rotation:
  enabled: true
  
  # Default rotation policy (can be overridden per secret)
  default_policy:
    max_age_hours: ${ROTATION_MAX_AGE_HOURS:2160}  # 90 days
    rotation_interval_hours: ${ROTATION_INTERVAL_HOURS:1440}  # 60 days
    min_entropy_bits: 256
    notify_before_hours: ${ROTATION_NOTIFY_HOURS:168}  # 7 days
    auto_rotate: false  # Require manual approval by default
    require_approval: true

  # Specific policies by secret type
  policies:
    jwt_secret:
      max_age_hours: 720  # 30 days
      rotation_interval_hours: 480  # 20 days
      auto_rotate: true
      require_approval: false
    
    database_password:
      max_age_hours: 2160  # 90 days
      rotation_interval_hours: 1440  # 60 days
      auto_rotate: false
      require_approval: true
      
    api_key:
      max_age_hours: 8760  # 365 days
      rotation_interval_hours: 7200  # 300 days
      auto_rotate: false
      require_approval: true
    
    encryption_key:
      max_age_hours: 4320  # 180 days
      rotation_interval_hours: 3600  # 150 days
      min_entropy_bits: 512
      auto_rotate: false
      require_approval: true

  # Notification settings
  notifications:
    channels:
      - type: slack
        webhook_url: ${ROTATION_SLACK_WEBHOOK:}
        channel: ${ROTATION_SLACK_CHANNEL:#security}
        
      - type: email
        smtp_host: ${SMTP_HOST:}
        smtp_port: ${SMTP_PORT:587}
        from: ${ROTATION_EMAIL_FROM:}
        to: ${ROTATION_EMAIL_TO:}

# Security settings
security:
  # Require TLS for all connections
  require_tls: true
  
  # Minimum TLS version
  min_tls_version: "1.2"
  
  # Cipher suites (if empty, uses Go defaults)
  cipher_suites: []
  
  # Rate limiting
  rate_limiting:
    enabled: true
    requests_per_minute: 100
    burst_size: 20

# Development mode settings (ignored in production)
development:
  # Allow insecure connections (development only)
  allow_insecure: false
  
  # Skip certificate verification (development only)  
  skip_tls_verify: false
  
  # Use environment variables for secrets (development only)
  use_env_provider: false
  
  # Verbose logging
  verbose_logging: false